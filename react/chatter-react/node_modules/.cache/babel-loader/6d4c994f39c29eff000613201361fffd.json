{"ast":null,"code":"var _jsxFileName = \"/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Modals/SimpleModal.tsx\",\n    _s = $RefreshSig$();\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useContext, useState } from \"react\";\nimport { UsrContxt } from \"../../App\";\nimport { validateYtUrl } from \"../../util/helpers\";\nimport OutlinedField from \"../InputField/OutlinedField\";\nimport ModalBase from \"./ModalBase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n *  A generic modal that contains a SINGLE text input, a confirm and a cancel button.\n * does not support validation from backend.\n **/\nfunction SimpleModal(_ref) {\n  _s();\n\n  let {\n    opened,\n    handleCloseModal\n  } = _ref;\n  const theme = useTheme();\n  const userContext = useContext(UsrContxt);\n  const confirmButtonSx = {\n    flexGrow: 1,\n    color: theme.common.text.accept,\n    fontWeight: \"bold\"\n  };\n  const cancelButtonSx = {\n    flexGrow: 1,\n    color: theme.common.text.decline,\n    fontWeight: \"bold\"\n  };\n  const buttonContainer = {\n    display: \"flex\"\n  };\n  const [values, setValues] = useState({\n    input: \"\",\n    error: false\n  });\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\" && values.input !== \"\") {\n      handleSubmit();\n    }\n  };\n\n  const handleChange = prop => event => {\n    setValues(values => ({ ...values,\n      [prop]: event.target.value,\n      error: false\n    }));\n  };\n\n  const handleSubmit = () => {\n    if (validateYtUrl(values.input)) {\n      userContext.setVideo(values.input);\n      handleCloseModal();\n    } else {\n      setValues(values => ({ ...values,\n        error: true\n      }));\n    }\n  };\n\n  const onCloseHandler = () => {\n    setValues({\n      error: false,\n      input: \"\"\n    });\n    handleCloseModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalBase, {\n    open: opened,\n    onClose: onCloseHandler,\n    header: \"Input New Video Url\",\n    children: [/*#__PURE__*/_jsxDEV(OutlinedField, {\n      error: values.error,\n      helperText: values.error ? \"Incorrect entry.\" : \"\",\n      autoComplete: \"off\",\n      id: \"outlined-basic\",\n      label: \"Youtube Url\",\n      onChange: handleChange(\"input\"),\n      onKeyDown: handleKeyDown,\n      defaultValue: userContext.videoUrl,\n      placeholder: \"https://www.youtube.com/watch?v=4WXs3sKu41I\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        sx: confirmButtonSx,\n        onClick: handleSubmit,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: cancelButtonSx,\n        onClick: onCloseHandler,\n        children: \"CANCEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleModal, \"wEP2O9qs8gK5ioVeOkjUzp9eWc0=\", false, function () {\n  return [useTheme];\n});\n\n_c = SimpleModal;\nexport default SimpleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleModal\");","map":{"version":3,"names":["Box","Button","useTheme","useContext","useState","UsrContxt","validateYtUrl","OutlinedField","ModalBase","SimpleModal","opened","handleCloseModal","theme","userContext","confirmButtonSx","flexGrow","color","common","text","accept","fontWeight","cancelButtonSx","decline","buttonContainer","display","values","setValues","input","error","handleKeyDown","event","key","handleSubmit","handleChange","prop","target","value","setVideo","onCloseHandler","videoUrl"],"sources":["/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Modals/SimpleModal.tsx"],"sourcesContent":["import Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { SxProps, useTheme } from \"@mui/material/styles\";\nimport { KeyboardEvent, useContext, useState } from \"react\";\nimport { UsrContxt } from \"../../App\";\nimport { validateYtUrl } from \"../../util/helpers\";\nimport OutlinedField from \"../InputField/OutlinedField\";\nimport ModalBase from \"./ModalBase\";\n\ninterface ModalProps {\n  opened: boolean;\n  handleCloseModal(): void;\n  // handleSubmit(input: string): void;\n  // header: string;\n  // placeholder: string;\n  // initialValue?: string;\n  // validation?(input: string): boolean;\n}\n\ninterface InputState {\n  input: string;\n  error: boolean;\n}\n\n/**\n *  A generic modal that contains a SINGLE text input, a confirm and a cancel button.\n * does not support validation from backend.\n **/\nfunction SimpleModal({\n  opened,\n  handleCloseModal,\n}: // handleSubmit,\n// header,\n// placeholder,\n// initialValue,\n// validation,\nModalProps): JSX.Element {\n  const theme = useTheme();\n  const userContext = useContext(UsrContxt);\n\n  const confirmButtonSx: SxProps = {\n    flexGrow: 1,\n    color: theme.common.text.accept,\n    fontWeight: \"bold\",\n  };\n\n  const cancelButtonSx: SxProps = {\n    flexGrow: 1,\n    color: theme.common.text.decline,\n    fontWeight: \"bold\",\n  };\n\n  const buttonContainer: SxProps = {\n    display: \"flex\",\n  };\n\n  const [values, setValues] = useState<InputState>({\n    input: \"\",\n    error: false,\n  });\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === \"Enter\" && values.input !== \"\") {\n      handleSubmit();\n    }\n  };\n\n  const handleChange =\n    (prop: keyof InputState) =>\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValues((values) => ({\n        ...values,\n        [prop]: event.target.value,\n        error: false,\n      }));\n    };\n\n  const handleSubmit = (): void => {\n    if (validateYtUrl(values.input)) {\n      userContext.setVideo(values.input);\n      handleCloseModal();\n    } else {\n      setValues((values) => ({ ...values, error: true }));\n    }\n  };\n\n  const onCloseHandler = (): void => {\n    setValues({\n      error: false,\n      input: \"\",\n    });\n    handleCloseModal();\n  };\n\n  return (\n    <ModalBase\n      open={opened}\n      onClose={onCloseHandler}\n      header=\"Input New Video Url\"\n    >\n      <OutlinedField\n        error={values.error}\n        helperText={values.error ? \"Incorrect entry.\" : \"\"}\n        autoComplete=\"off\"\n        id=\"outlined-basic\"\n        label={\"Youtube Url\"}\n        onChange={handleChange(\"input\")}\n        onKeyDown={handleKeyDown}\n        defaultValue={userContext.videoUrl}\n        placeholder=\"https://www.youtube.com/watch?v=4WXs3sKu41I\"\n      />\n      <Box sx={buttonContainer}>\n        <Button sx={confirmButtonSx} onClick={handleSubmit}>\n          SUBMIT\n        </Button>\n        <Button sx={cancelButtonSx} onClick={onCloseHandler}>\n          CANCEL\n        </Button>\n      </Box>\n    </ModalBase>\n  );\n}\n\nexport default SimpleModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}