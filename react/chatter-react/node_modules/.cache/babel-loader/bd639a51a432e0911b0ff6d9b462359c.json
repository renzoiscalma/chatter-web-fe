{"ast":null,"code":"var _jsxFileName = \"/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Modals/SimpleModal.tsx\",\n    _s = $RefreshSig$();\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport { useTheme } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n *  A generic modal that contains a SINGLE text input, a confirm and a cancel button.\n **/\nfunction SimpleModal(_ref) {\n  _s();\n\n  var _theme$modal, _theme$textInput, _theme$textInput2;\n\n  let {\n    opened,\n    handleCloseModal,\n    handleSubmit,\n    header,\n    placeholder,\n    initialValue\n  } = _ref;\n  const theme = useTheme();\n  const style = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    borderRadius: \"26px\",\n    width: 400,\n    bgcolor: (_theme$modal = theme.modal) === null || _theme$modal === void 0 ? void 0 : _theme$modal.bgColor,\n    boxShadow: 24,\n    px: 4,\n    py: 2\n  };\n  const confirmButtonSx = {\n    flexGrow: 1\n  };\n  const cancelButtonSx = {\n    flexGrow: 1\n  };\n  const buttonContainer = {\n    display: \"flex\"\n  };\n  const textFieldSx = {\n    margin: \"18px 0\",\n    \".MuiInputLabel-outlined\": {\n      color: theme.common.text.secondary + \" !important\"\n    },\n    input: {\n      color: theme.common.text.secondary\n    },\n    fieldset: {\n      borderColor: (_theme$textInput = theme.textInput) === null || _theme$textInput === void 0 ? void 0 : _theme$textInput.borderColor,\n      \"&.MuiOutlinedInput-notchedOutline\": {\n        borderColor: ((_theme$textInput2 = theme.textInput) === null || _theme$textInput2 === void 0 ? void 0 : _theme$textInput2.borderColor) + \" !important\"\n      }\n    }\n  };\n  const [values, setValues] = useState({\n    input: \"asdasd\"\n  });\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\" && values.input !== \"\") {\n      handleSubmit(values.input);\n    }\n  };\n\n  const handleChange = prop => event => {\n    setValues({\n      [prop]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: opened,\n    onClose: handleCloseModal,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: style,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"modal-modal-title\",\n        variant: \"h6\",\n        component: \"h2\",\n        textAlign: \"center\",\n        color: theme.common.text.secondary,\n        children: header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoComplete: \"off\",\n        sx: textFieldSx,\n        id: \"outlined-basic\",\n        label: placeholder,\n        variant: \"outlined\",\n        onChange: handleChange(\"input\"),\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: buttonContainer,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          sx: confirmButtonSx,\n          onClick: () => {\n            handleSubmit(values.input);\n          },\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: cancelButtonSx,\n          onClick: handleCloseModal,\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleModal, \"39jxxs0J+2ZyKzHaA8y2fl1H3ws=\", false, function () {\n  return [useTheme];\n});\n\n_c = SimpleModal;\nexport default SimpleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleModal\");","map":{"version":3,"names":["Box","Button","Modal","useTheme","TextField","Typography","useState","SimpleModal","opened","handleCloseModal","handleSubmit","header","placeholder","initialValue","theme","style","display","flexDirection","position","top","left","transform","borderRadius","width","bgcolor","modal","bgColor","boxShadow","px","py","confirmButtonSx","flexGrow","cancelButtonSx","buttonContainer","textFieldSx","margin","color","common","text","secondary","input","fieldset","borderColor","textInput","values","setValues","handleKeyDown","event","key","handleChange","prop","target","value"],"sources":["/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Modals/SimpleModal.tsx"],"sourcesContent":["import Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport { SxProps, useTheme } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { KeyboardEvent, useState } from \"react\";\n\ninterface ModalProps {\n  opened: boolean;\n  handleCloseModal(): void;\n  handleSubmit(input: string): void;\n  header: string;\n  placeholder: string;\n  initialValue?: string;\n}\n\ninterface InputState {\n  input: string;\n}\n\n/**\n *  A generic modal that contains a SINGLE text input, a confirm and a cancel button.\n **/\nfunction SimpleModal({\n  opened,\n  handleCloseModal,\n  handleSubmit,\n  header,\n  placeholder,\n  initialValue,\n}: ModalProps): JSX.Element {\n  const theme = useTheme();\n\n  const style: SxProps = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\" as \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    borderRadius: \"26px\",\n    width: 400,\n    bgcolor: theme.modal?.bgColor,\n    boxShadow: 24,\n    px: 4,\n    py: 2,\n  };\n\n  const confirmButtonSx: SxProps = {\n    flexGrow: 1,\n  };\n\n  const cancelButtonSx: SxProps = {\n    flexGrow: 1,\n  };\n\n  const buttonContainer: SxProps = {\n    display: \"flex\",\n  };\n\n  const textFieldSx: SxProps = {\n    margin: \"18px 0\",\n    \".MuiInputLabel-outlined\": {\n      color: theme.common.text.secondary + \" !important\",\n    },\n    input: {\n      color: theme.common.text.secondary,\n    },\n    fieldset: {\n      borderColor: theme.textInput?.borderColor,\n      \"&.MuiOutlinedInput-notchedOutline\": {\n        borderColor: theme.textInput?.borderColor + \" !important\",\n      },\n    },\n  };\n\n  const [values, setValues] = useState<InputState>({\n    input: \"asdasd\",\n  });\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === \"Enter\" && values.input !== \"\") {\n      handleSubmit(values.input);\n    }\n  };\n\n  const handleChange =\n    (prop: keyof InputState) =>\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValues({ [prop]: event.target.value });\n    };\n\n  return (\n    <Modal open={opened} onClose={handleCloseModal}>\n      <Box sx={style}>\n        <Typography\n          id=\"modal-modal-title\"\n          variant=\"h6\"\n          component=\"h2\"\n          textAlign=\"center\"\n          color={theme.common.text.secondary}\n        >\n          {header}\n        </Typography>\n        <TextField\n          autoComplete=\"off\"\n          sx={textFieldSx}\n          id=\"outlined-basic\"\n          label={placeholder}\n          variant=\"outlined\"\n          onChange={handleChange(\"input\")}\n          onKeyDown={handleKeyDown}\n        />\n        <Box sx={buttonContainer}>\n          <Button\n            sx={confirmButtonSx}\n            onClick={() => {\n              handleSubmit(values.input);\n            }}\n          >\n            SUBMIT\n          </Button>\n          <Button sx={cancelButtonSx} onClick={handleCloseModal}>\n            CANCEL\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default SimpleModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}