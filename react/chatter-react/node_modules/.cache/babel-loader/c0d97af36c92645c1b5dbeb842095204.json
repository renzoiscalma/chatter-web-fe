{"ast":null,"code":"var _jsxFileName = \"/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Video/Video.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMutation, useSubscription } from \"@apollo/client\";\nimport Box from \"@mui/material/Box\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { UsrContxt } from \"../../App\";\nimport { UPDATE_VIDEO, VIDEO_STATUS_SUBSCRIPTION } from \"../../queries/Video\";\nimport { useContainerDimension } from \"../../util/ResizeUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar PlayerState;\n\n(function (PlayerState) {\n  PlayerState[PlayerState[\"UNSTARTED\"] = -1] = \"UNSTARTED\";\n  PlayerState[PlayerState[\"ENDED\"] = 0] = \"ENDED\";\n  PlayerState[PlayerState[\"PLAYING\"] = 1] = \"PLAYING\";\n  PlayerState[PlayerState[\"PAUSED\"] = 2] = \"PAUSED\";\n  PlayerState[PlayerState[\"BUFFERING\"] = 3] = \"BUFFERING\";\n  PlayerState[PlayerState[\"VIDEO_CUED\"] = 5] = \"VIDEO_CUED\";\n})(PlayerState || (PlayerState = {}));\n\nconst defaultPlayerProps = {\n  playing: false,\n  controls: true\n};\n\nfunction Video(_ref) {\n  _s();\n\n  let {\n    videoId\n  } = _ref;\n  const YOUTUBE_URL = \"https://www.youtube.com/watch?v=\";\n  const userContext = useContext(UsrContxt);\n  const [videoState, setVideoState] = useState({});\n  const [playerProps, setPlayerProps] = useState(defaultPlayerProps);\n  const ytContainer = useRef(null);\n  const videoSize = useContainerDimension(ytContainer);\n  const playerRef = useRef(null);\n  const videoRef = useRef(null);\n  const videoChanges = useSubscription(VIDEO_STATUS_SUBSCRIPTION, {\n    variables: {\n      lobbyId: userContext.lobbyId,\n      userId: userContext.userId\n    }\n  });\n  const [updateVideo, updateVideoProperties] = useMutation(UPDATE_VIDEO);\n  const videoContainerStyle = {\n    display: \"flex\"\n  };\n\n  const onStateChangeHandler = event => {// setVideoState((prev: State) => ({\n    //   ...prev,\n    //   playerState: getPlayerState(event.data),\n    // }));\n  };\n\n  const onReadyHandler = async event => {\n    const videoDuration = await event.target.getDuration();\n    setVideoState(prevState => ({ ...prevState,\n      videoDuration: videoDuration\n    }));\n  };\n\n  const onPlayHandler = () => {\n    console.log(playerRef.current);\n    const {\n      lobbyId,\n      userId\n    } = userContext;\n    if (!playerRef.current) return;\n    console.log({\n      currTime: +playerRef.current.getCurrentTime().toFixed(0),\n      lobbyId,\n      userId,\n      status: PlayerState.PLAYING\n    });\n    updateVideo({\n      variables: {\n        statusInput: {\n          currTime: +playerRef.current.getCurrentTime().toFixed(0),\n          lobbyId,\n          userId,\n          status: PlayerState.PLAYING\n        }\n      }\n    });\n  };\n\n  const onPauseHandler = () => {\n    const {\n      lobbyId,\n      userId\n    } = userContext;\n    if (!playerRef.current) return;\n    updateVideo({\n      variables: {\n        statusInput: {\n          currTime: +playerRef.current.getCurrentTime().toFixed(0),\n          lobbyId,\n          userId,\n          status: PlayerState.PAUSED\n        }\n      }\n    });\n  };\n\n  const onEndHandler = event => {};\n\n  const onErrorHandler = event => {};\n\n  const getPlayerState = eventData => {\n    switch (eventData) {\n      case 0:\n        return PlayerState.ENDED;\n\n      case 1:\n        return PlayerState.PLAYING;\n\n      case 2:\n        return PlayerState.PAUSED;\n\n      case 3:\n        return PlayerState.BUFFERING;\n\n      case 5:\n        return PlayerState.VIDEO_CUED;\n\n      default:\n        return PlayerState.UNSTARTED;\n    }\n  };\n\n  useEffect(() => {\n    var _videoRef$current, _videoChanges$data;\n\n    const player = (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.getInternalPlayer();\n\n    if (videoChanges !== null && videoChanges !== void 0 && (_videoChanges$data = videoChanges.data) !== null && _videoChanges$data !== void 0 && _videoChanges$data.videoStatusChanged && player) {\n      const {\n        currTime,\n        status\n      } = videoChanges.data.videoStatusChanged.data;\n      console.log(\"received \" + status + \" \", player, status);\n\n      switch (getPlayerState(status)) {\n        case PlayerState.PLAYING:\n          // player.seekTo(10, true);\n          setPlayerProps(values => ({ ...values,\n            playing: true\n          }));\n          break;\n\n        case PlayerState.PAUSED:\n          setPlayerProps(values => ({ ...values,\n            playing: false\n          }));\n          break;\n\n        case PlayerState.UNSTARTED:\n          player.stopVideo();\n          break;\n\n        case PlayerState.ENDED:\n          player.stopVideo();\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, [videoChanges.data]);\n  useEffect(() => {\n    setPlayerProps({\n      url: YOUTUBE_URL + videoId\n    });\n  }, []);\n  useEffect(() => {\n    setPlayerProps(state => ({ ...state,\n      onPlay: onPlayHandler,\n      onPause: onPauseHandler\n    }));\n  }, [userContext]);\n  useEffect(() => {\n    setPlayerProps(state => ({ ...state,\n      width: videoSize.width,\n      height: videoSize.height\n    }));\n  }, [videoSize]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: videoContainerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"70vw\",\n        height: \"99vh\"\n      },\n      ref: ytContainer,\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer, { ...playerProps,\n        ref: playerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Video, \"BySmR8YweFyhEtYJE1qGhLA/Qr4=\", false, function () {\n  return [useContainerDimension, useSubscription, useMutation];\n});\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"names":["useMutation","useSubscription","Box","useContext","useEffect","useRef","useState","ReactPlayer","UsrContxt","UPDATE_VIDEO","VIDEO_STATUS_SUBSCRIPTION","useContainerDimension","PlayerState","defaultPlayerProps","playing","controls","Video","videoId","YOUTUBE_URL","userContext","videoState","setVideoState","playerProps","setPlayerProps","ytContainer","videoSize","playerRef","videoRef","videoChanges","variables","lobbyId","userId","updateVideo","updateVideoProperties","videoContainerStyle","display","onStateChangeHandler","event","onReadyHandler","videoDuration","target","getDuration","prevState","onPlayHandler","console","log","current","currTime","getCurrentTime","toFixed","status","PLAYING","statusInput","onPauseHandler","PAUSED","onEndHandler","onErrorHandler","getPlayerState","eventData","ENDED","BUFFERING","VIDEO_CUED","UNSTARTED","player","getInternalPlayer","data","videoStatusChanged","values","stopVideo","url","state","onPlay","onPause","width","height"],"sources":["/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Video/Video.tsx"],"sourcesContent":["import {\n  MutationTuple,\n  SubscriptionResult,\n  useMutation,\n  useSubscription,\n} from \"@apollo/client\";\nimport Box from \"@mui/material/Box\";\nimport { SxProps } from \"@mui/system\";\nimport { eventNames } from \"process\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport ReactPlayer, { ReactPlayerProps } from \"react-player\";\nimport YouTube, { YouTubeEvent, YouTubeProps } from \"react-youtube\";\nimport { UsrContxt } from \"../../App\";\nimport { UPDATE_VIDEO, VIDEO_STATUS_SUBSCRIPTION } from \"../../queries/Video\";\nimport { useContainerDimension } from \"../../util/ResizeUtil\";\nimport UpdateVideoStatusRequest from \"../Chatter/interface/requests/UpdateVideoStatusRequest\";\nimport GenericResponse from \"../Chatter/interface/response/GenericResponse\";\nimport VideoStatusTopicResponse from \"../Chatter/interface/response/VideoStatusTopicResponse\";\n\ninterface VideoProps {\n  videoId: string;\n}\n\ninterface LobbyIdProps {\n  lobbyId: string;\n}\ninterface UserIdProps {\n  userIdProps: string;\n}\n\nenum PlayerState {\n  UNSTARTED = -1,\n  ENDED = 0,\n  PLAYING = 1,\n  PAUSED = 2,\n  BUFFERING = 3,\n  VIDEO_CUED = 5,\n}\n\ninterface State {\n  // playerState: PlayerState;\n  url: string;\n  videoDuration: number;\n  onReady?(event: YouTubeEvent<number>): void;\n  onStateChange?(event: YouTubeEvent<number>): void;\n  onPlay?(event: YouTubeEvent<number>): void;\n  onPause?(event: YouTubeEvent<number>): void;\n  onEnd?(event: YouTubeEvent<number>): void;\n  opts: YouTubeProps[\"opts\"];\n}\n\nconst defaultPlayerProps: ReactPlayerProps = {\n  playing: false,\n  controls: true,\n};\n\nfunction Video({ videoId }: VideoProps): JSX.Element {\n  const YOUTUBE_URL = \"https://www.youtube.com/watch?v=\";\n  const userContext = useContext(UsrContxt);\n  const [videoState, setVideoState] = useState<State>({} as State);\n  const [playerProps, setPlayerProps] =\n    useState<ReactPlayerProps>(defaultPlayerProps);\n  const ytContainer = useRef<HTMLDivElement>(null);\n  const videoSize = useContainerDimension(ytContainer);\n  const playerRef = useRef<ReactPlayer>(null);\n  const videoRef = useRef<YouTube>(null);\n\n  const videoChanges: SubscriptionResult<\n    { videoStatusChanged: VideoStatusTopicResponse },\n    { lobbyId: LobbyIdProps; userId: UserIdProps }\n  > = useSubscription(VIDEO_STATUS_SUBSCRIPTION, {\n    variables: {\n      lobbyId: userContext.lobbyId,\n      userId: userContext.userId,\n    },\n  });\n\n  const [updateVideo, updateVideoProperties]: MutationTuple<\n    { updateVideoStatus: GenericResponse },\n    { statusInput: UpdateVideoStatusRequest }\n  > = useMutation(UPDATE_VIDEO);\n\n  const videoContainerStyle: SxProps = {\n    display: \"flex\",\n  };\n\n  const onStateChangeHandler = (event: YouTubeEvent<number>): void => {\n    // setVideoState((prev: State) => ({\n    //   ...prev,\n    //   playerState: getPlayerState(event.data),\n    // }));\n  };\n\n  const onReadyHandler = async (event: YouTubeEvent<number>): Promise<void> => {\n    const videoDuration = await event.target.getDuration();\n    setVideoState((prevState) => ({\n      ...prevState,\n      videoDuration: videoDuration,\n    }));\n  };\n\n  const onPlayHandler = (): void => {\n    console.log(playerRef.current);\n    const { lobbyId, userId } = userContext;\n    if (!playerRef.current) return;\n    console.log({\n      currTime: +playerRef.current.getCurrentTime().toFixed(0),\n      lobbyId,\n      userId,\n      status: PlayerState.PLAYING,\n    });\n    updateVideo({\n      variables: {\n        statusInput: {\n          currTime: +playerRef.current.getCurrentTime().toFixed(0),\n          lobbyId,\n          userId,\n          status: PlayerState.PLAYING,\n        },\n      },\n    });\n  };\n\n  const onPauseHandler = (): void => {\n    const { lobbyId, userId } = userContext;\n    if (!playerRef.current) return;\n    updateVideo({\n      variables: {\n        statusInput: {\n          currTime: +playerRef.current.getCurrentTime().toFixed(0),\n          lobbyId,\n          userId,\n          status: PlayerState.PAUSED,\n        },\n      },\n    });\n  };\n\n  const onEndHandler = (event: YouTubeEvent<number>): void => {};\n\n  const onErrorHandler = (event: YouTubeEvent<number>): void => {};\n\n  const getPlayerState = (eventData: number): PlayerState => {\n    switch (eventData) {\n      case 0:\n        return PlayerState.ENDED;\n      case 1:\n        return PlayerState.PLAYING;\n      case 2:\n        return PlayerState.PAUSED;\n      case 3:\n        return PlayerState.BUFFERING;\n      case 5:\n        return PlayerState.VIDEO_CUED;\n      default:\n        return PlayerState.UNSTARTED;\n    }\n  };\n\n  useEffect(() => {\n    const player = videoRef.current?.getInternalPlayer();\n    if (videoChanges?.data?.videoStatusChanged && player) {\n      const { currTime, status } = videoChanges.data.videoStatusChanged.data;\n      console.log(\"received \" + status + \" \", player, status);\n      switch (getPlayerState(status)) {\n        case PlayerState.PLAYING:\n          // player.seekTo(10, true);\n          setPlayerProps((values) => ({\n            ...values,\n            playing: true,\n          }));\n          break;\n        case PlayerState.PAUSED:\n          setPlayerProps((values) => ({\n            ...values,\n            playing: false,\n          }));\n          break;\n        case PlayerState.UNSTARTED:\n          player.stopVideo();\n          break;\n        case PlayerState.ENDED:\n          player.stopVideo();\n          break;\n        default:\n          break;\n      }\n    }\n  }, [videoChanges.data]);\n\n  useEffect(() => {\n    setPlayerProps({\n      url: YOUTUBE_URL + videoId,\n    });\n  }, []);\n\n  useEffect(() => {\n    setPlayerProps((state) => ({\n      ...state,\n      onPlay: onPlayHandler,\n      onPause: onPauseHandler,\n    }));\n  }, [userContext]);\n\n  useEffect(() => {\n    setPlayerProps((state: State) => ({\n      ...state,\n      width: videoSize.width,\n      height: videoSize.height,\n    }));\n  }, [videoSize]);\n\n  return (\n    <Box sx={videoContainerStyle}>\n      {/* <div style={{ width: \"70vw\", height: \"99vh\" }} ref={ytContainer}>\n        <YouTube {...videoState} ref={videoRef}></YouTube>\n      </div> */}\n      <div style={{ width: \"70vw\", height: \"99vh\" }} ref={ytContainer}>\n        <ReactPlayer {...playerProps} ref={playerRef}></ReactPlayer>\n      </div>\n    </Box>\n  );\n}\n\nexport default Video;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}