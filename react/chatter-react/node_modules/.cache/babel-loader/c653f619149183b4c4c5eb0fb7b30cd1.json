{"ast":null,"code":"var _jsxFileName = \"/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport Layout from \"./components/Layout/Layout\";\nimport { ADD_NEW_USER, CREATE_LOBBY, IS_LOBBY_EXISTING } from \"./queries/App\";\nimport LobbyModal from \"./components/Modals/LobbyModal\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsrContxt = /*#__PURE__*/createContext({\n  username: \"\",\n  userId: \"\",\n  lobbyId: \"\",\n  darkMode: false,\n  setUsername: () => {}\n});\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [lobbyId, setLobbyId] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n  const [userCookie, setUserCookie] = useCookies([\"user-cookie\"]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [lobbyModal, setLobbyModal] = useState(false); // TODO ADD PROPER TYPES\n\n  const [newUserMutation, newUserMutationRes] = useMutation(ADD_NEW_USER);\n  const [createLobbyMutation, createLobbyMutationRes] = useMutation(CREATE_LOBBY);\n  const [isLobbyExisting, isLobbyExistingRes] = useLazyQuery(IS_LOBBY_EXISTING);\n\n  const createLobby = () => {\n    // todo create loading screen when loading a lobby\n    console.log(\"creating lobby...\"); // TODO add 1 second delay, loading = true modal should have a spinner inside\n\n    createLobbyMutation();\n  };\n\n  const handleSetUsername = username => {\n    setUsername(username);\n  };\n\n  const handleCloseModal = () => {\n    setLobbyModal(false);\n  };\n\n  const handleDarkModeChange = () => {\n    console.log(\"dark mode toggled!\");\n    setDarkMode(val => !val);\n  };\n\n  useEffect(() => {\n    if (!(userCookie !== null && userCookie !== void 0 && userCookie[\"user-cookie\"])) {\n      newUserMutation();\n    } else {\n      const {\n        userId,\n        username\n      } = userCookie[\"user-cookie\"];\n      setUsername(username);\n      setUserId(userId);\n    }\n\n    const lobbyId = searchParams.get(\"lobbyId\") || \"\";\n\n    if (lobbyId) {\n      isLobbyExisting({\n        variables: {\n          lobbyId: lobbyId\n        }\n      });\n    } else {\n      setLobbyModal(true);\n    }\n  }, []);\n  useEffect(() => {\n    if (newUserMutationRes.data) {\n      let {\n        code,\n        success,\n        user\n      } = newUserMutationRes.data.addNewUser;\n\n      if (code === 200 && success) {\n        setUsername(user.username);\n        setUserId(user.id);\n        setUserCookie(\"user-cookie\", {\n          userId: user.id,\n          username: user.username\n        }, {\n          path: \"/\",\n          expires: new Date(\"11-10-2023\")\n        });\n      }\n    }\n  }, [newUserMutationRes.data]);\n  useEffect(() => {\n    if (createLobbyMutationRes.data) {\n      const {\n        id\n      } = createLobbyMutationRes.data.createLobby;\n      setLobbyId(id);\n      handleCloseModal();\n    }\n  }, [createLobbyMutationRes.data]);\n  useEffect(() => {\n    if (!isLobbyExistingRes.called || isLobbyExistingRes.loading) return;\n    const lobbyId = searchParams.get(\"lobbyId\") || \"\";\n\n    if (isLobbyExistingRes.data && isLobbyExistingRes.data.isLobbyExisting.isExisting) {\n      setLobbyId(lobbyId);\n      handleCloseModal();\n    } else {\n      setLobbyModal(true);\n    }\n  }, [isLobbyExistingRes.data]); // todo proper loading\n\n  if (newUserMutationRes.loading || newUserMutationRes.error) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"LOADING\"\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(UsrContxt.Provider, {\n    value: {\n      username,\n      setUsername: handleSetUsername,\n      userId,\n      lobbyId\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(LobbyModal, {\n        opened: lobbyModal,\n        createLobby: createLobby,\n        handleCloseModal: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sMtEsUk648ML5nlmw1z2OeVJwEk=\", false, function () {\n  return [useCookies, useSearchParams, useMutation, useMutation, useLazyQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useLazyQuery","useMutation","React","createContext","useEffect","useState","useCookies","Layout","ADD_NEW_USER","CREATE_LOBBY","IS_LOBBY_EXISTING","LobbyModal","useSearchParams","UsrContxt","username","userId","lobbyId","darkMode","setUsername","App","setUserId","setLobbyId","setDarkMode","userCookie","setUserCookie","searchParams","setSearchParams","lobbyModal","setLobbyModal","newUserMutation","newUserMutationRes","createLobbyMutation","createLobbyMutationRes","isLobbyExisting","isLobbyExistingRes","createLobby","console","log","handleSetUsername","handleCloseModal","handleDarkModeChange","val","get","variables","data","code","success","user","addNewUser","id","path","expires","Date","called","loading","isExisting","error"],"sources":["/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/App.tsx"],"sourcesContent":["import {\n  LazyQueryResultTuple,\n  MutationTuple,\n  useLazyQuery,\n  useMutation,\n} from \"@apollo/client\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport UserContext from \"./components/Chatter/interface/UserContext\";\nimport Layout from \"./components/Layout/Layout\";\nimport { ADD_NEW_USER, CREATE_LOBBY, IS_LOBBY_EXISTING } from \"./queries/App\";\nimport LobbyModal from \"./components/Modals/LobbyModal\";\nimport IsLobbyExistingRequest from \"./components/Chatter/interface/requests/IsLobbyExistingRequest\";\nimport IsLobbyExistingResponse from \"./components/Chatter/interface/response/IsLobbyExistingResponse\";\nimport Lobby from \"./components/Chatter/interface/Lobby\";\nimport AddNewUserResponse from \"./components/Chatter/interface/response/AddNewUserResponse\";\nimport { useSearchParams } from \"react-router-dom\";\n\nexport const UsrContxt = createContext<UserContext>({\n  username: \"\",\n  userId: \"\",\n  lobbyId: \"\",\n  darkMode: false,\n  setUsername: () => {},\n});\n\nfunction App(): JSX.Element {\n  const [username, setUsername] = useState<string>(\"\");\n  const [userId, setUserId] = useState<string>(\"\");\n  const [lobbyId, setLobbyId] = useState<string>(\"\");\n  const [darkMode, setDarkMode] = useState<boolean>(false);\n  const [userCookie, setUserCookie] = useCookies([\"user-cookie\"]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [lobbyModal, setLobbyModal] = useState<boolean>(false);\n\n  // TODO ADD PROPER TYPES\n  const [newUserMutation, newUserMutationRes]: MutationTuple<\n    { addNewUser: AddNewUserResponse },\n    null\n  > = useMutation(ADD_NEW_USER);\n\n  const [createLobbyMutation, createLobbyMutationRes]: MutationTuple<\n    { createLobby: Lobby },\n    null\n  > = useMutation(CREATE_LOBBY);\n\n  const [isLobbyExisting, isLobbyExistingRes]: LazyQueryResultTuple<\n    { isLobbyExisting: IsLobbyExistingResponse },\n    IsLobbyExistingRequest\n  > = useLazyQuery(IS_LOBBY_EXISTING);\n\n  const createLobby = () => {\n    // todo create loading screen when loading a lobby\n    console.log(\"creating lobby...\");\n    // TODO add 1 second delay, loading = true modal should have a spinner inside\n    createLobbyMutation();\n  };\n\n  const handleSetUsername = (username: string) => {\n    setUsername(username);\n  };\n\n  const handleCloseModal = () => {\n    setLobbyModal(false);\n  };\n\n  const handleDarkModeChange = () => {\n    console.log(\"dark mode toggled!\");\n    setDarkMode((val) => !val);\n  };\n\n  useEffect(() => {\n    if (!userCookie?.[\"user-cookie\"]) {\n      newUserMutation();\n    } else {\n      const { userId, username } = userCookie[\"user-cookie\"];\n      setUsername(username);\n      setUserId(userId);\n    }\n\n    const lobbyId = searchParams.get(\"lobbyId\") || \"\";\n    if (lobbyId) {\n      isLobbyExisting({\n        variables: {\n          lobbyId: lobbyId,\n        },\n      });\n    } else {\n      setLobbyModal(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (newUserMutationRes.data) {\n      let { code, success, user } = newUserMutationRes.data.addNewUser;\n      if (code === 200 && success) {\n        setUsername(user.username);\n        setUserId(user.id);\n        setUserCookie(\n          \"user-cookie\",\n          { userId: user.id, username: user.username },\n          {\n            path: \"/\",\n            expires: new Date(\"11-10-2023\"),\n          }\n        );\n      }\n    }\n  }, [newUserMutationRes.data]);\n\n  useEffect(() => {\n    if (createLobbyMutationRes.data) {\n      const { id } = createLobbyMutationRes.data.createLobby;\n      setLobbyId(id);\n      handleCloseModal();\n    }\n  }, [createLobbyMutationRes.data]);\n\n  useEffect(() => {\n    if (!isLobbyExistingRes.called || isLobbyExistingRes.loading) return;\n    const lobbyId = searchParams.get(\"lobbyId\") || \"\";\n    if (\n      isLobbyExistingRes.data &&\n      isLobbyExistingRes.data.isLobbyExisting.isExisting\n    ) {\n      setLobbyId(lobbyId);\n      handleCloseModal();\n    } else {\n      setLobbyModal(true);\n    }\n  }, [isLobbyExistingRes.data]);\n\n  // todo proper loading\n  if (newUserMutationRes.loading || newUserMutationRes.error)\n    return <>LOADING</>;\n\n  return (\n    <UsrContxt.Provider\n      value={{ username, setUsername: handleSetUsername, userId, lobbyId }}\n    >\n      <div className=\"App\">\n        <LobbyModal\n          opened={lobbyModal}\n          createLobby={createLobby}\n          handleCloseModal={handleCloseModal}\n        />\n        <Layout />\n      </div>\n    </UsrContxt.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}