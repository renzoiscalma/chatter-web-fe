{"ast":null,"code":"var _jsxFileName = \"/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Video/Video.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMutation, useQuery, useSubscription } from \"@apollo/client\";\nimport Box from \"@mui/material/Box\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { UsrContxt } from \"../../App\";\nimport { GET_VIDEO_STATUS, UPDATE_VIDEO, VIDEO_STATUS_SUBSCRIPTION } from \"../../queries/Video\";\nimport { useContainerDimension } from \"../../util/ResizeUtil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar PlayerState;\n\n(function (PlayerState) {\n  PlayerState[PlayerState[\"UNSTARTED\"] = -1] = \"UNSTARTED\";\n  PlayerState[PlayerState[\"ENDED\"] = 0] = \"ENDED\";\n  PlayerState[PlayerState[\"PLAYING\"] = 1] = \"PLAYING\";\n  PlayerState[PlayerState[\"PAUSED\"] = 2] = \"PAUSED\";\n  PlayerState[PlayerState[\"BUFFERING\"] = 3] = \"BUFFERING\";\n  PlayerState[PlayerState[\"VIDEO_CUED\"] = 5] = \"VIDEO_CUED\";\n})(PlayerState || (PlayerState = {}));\n\nconst defaultPlayerProps = {\n  playing: true,\n  controls: true,\n  // muted: true,\n  playbackRate: 1.0,\n  loop: false,\n  playsinline: true\n};\n\nfunction Video() {\n  _s();\n\n  const userContext = useContext(UsrContxt);\n  const [playerProps, setPlayerProps] = useState(defaultPlayerProps);\n  const [updateFromBE, setUpdateFromBE] = useState(false);\n  const ytContainer = useRef(null);\n  const playerRef = useRef(null);\n  const videoSize = useContainerDimension(ytContainer); // needed to track the correct state on callbacks\n  // SOURCE: https://stackoverflow.com/questions/57847594/react-hooks-accessing-up-to-date-state-from-within-a-callback\n\n  const updateFromBERef = useRef();\n  updateFromBERef.current = updateFromBE;\n  const videoChanges = useSubscription(VIDEO_STATUS_SUBSCRIPTION, {\n    variables: {\n      lobbyId: userContext.lobbyId,\n      userId: userContext.userId\n    }\n  });\n  const [updateVideo, updateVideoProperties] = useMutation(UPDATE_VIDEO);\n  const videoStatus = useQuery(GET_VIDEO_STATUS, {\n    variables: {\n      lobbyId: userContext.lobbyId\n    }\n  });\n  const videoContainerStyle = {\n    display: \"flex\",\n    bgcolor: \"#000\",\n    width: \"inherit\",\n    height: \"calc(100vh - 64px)\",\n    // -64px because of top nav bar\n    \"> div\": {\n      paddingTop: \"30px\",\n      paddingBottom: \"30px\"\n    }\n  };\n\n  const onPlayHandler = () => {\n    const {\n      lobbyId,\n      userId\n    } = userContext;\n    if (!playerRef.current) return; // we want to call this if this is a manual play\n\n    if (!updateFromBERef.current) updateVideo({\n      variables: {\n        statusInput: {\n          currTime: +playerRef.current.getCurrentTime().toFixed(0),\n          lobbyId,\n          userId,\n          status: PlayerState.PLAYING\n        }\n      }\n    });\n    setUpdateFromBE(false);\n  };\n\n  const onPauseHandler = param => {\n    const {\n      lobbyId,\n      userId\n    } = userContext;\n    if (!playerRef.current) return; // we want to call this if this is a manual play\n\n    if (!updateFromBERef.current) updateVideo({\n      variables: {\n        statusInput: {\n          currTime: +playerRef.current.getCurrentTime().toFixed(0),\n          lobbyId,\n          userId,\n          status: PlayerState.PAUSED\n        }\n      }\n    });\n    setUpdateFromBE(false);\n  };\n\n  const onBufferHandler = param => {\n    const {\n      lobbyId,\n      userId\n    } = userContext;\n    if (!playerRef.current) return;\n    updateVideo({\n      variables: {\n        statusInput: {\n          currTime: +playerRef.current.getCurrentTime().toFixed(0),\n          lobbyId,\n          userId,\n          status: PlayerState.BUFFERING\n        }\n      }\n    });\n  };\n\n  const getPlayerState = eventData => {\n    switch (eventData) {\n      case 0:\n        return PlayerState.ENDED;\n\n      case 1:\n        return PlayerState.PLAYING;\n\n      case 2:\n        return PlayerState.PAUSED;\n\n      case 3:\n        return PlayerState.BUFFERING;\n\n      case 5:\n        return PlayerState.VIDEO_CUED;\n\n      default:\n        return PlayerState.UNSTARTED;\n    }\n  };\n\n  useEffect(() => {\n    var _videoChanges$data;\n\n    if (videoChanges !== null && videoChanges !== void 0 && (_videoChanges$data = videoChanges.data) !== null && _videoChanges$data !== void 0 && _videoChanges$data.videoStatusChanged) {\n      var _videoChanges$data2;\n\n      console.log(videoChanges === null || videoChanges === void 0 ? void 0 : (_videoChanges$data2 = videoChanges.data) === null || _videoChanges$data2 === void 0 ? void 0 : _videoChanges$data2.videoStatusChanged, \"update from BE\");\n      setUpdateFromBE(true);\n      const {\n        currTime,\n        status,\n        url\n      } = videoChanges.data.videoStatusChanged.data;\n\n      if (url) {\n        setPlayerProps(values => ({ ...values,\n          url\n        }));\n      }\n\n      if (currTime > 0 && playerRef.current && currTime - +playerRef.current.getCurrentTime().toFixed(0) != 0 // do seek when player difference from BE is not 0\n      ) {\n        var _playerRef$current;\n\n        (_playerRef$current = playerRef.current) === null || _playerRef$current === void 0 ? void 0 : _playerRef$current.seekTo(currTime);\n      }\n\n      switch (getPlayerState(status)) {\n        case PlayerState.PLAYING:\n          setPlayerProps(values => ({ ...values,\n            playing: true\n          }));\n          break;\n\n        case PlayerState.PAUSED:\n          setPlayerProps(values => ({ ...values,\n            playing: false\n          }));\n          break;\n\n        case PlayerState.UNSTARTED:\n        case PlayerState.ENDED:\n        case PlayerState.BUFFERING:\n        default:\n          break;\n      }\n    }\n  }, [videoChanges.data]);\n  useEffect(() => {\n    setPlayerProps(values => ({ ...values,\n      onPlay: onPlayHandler,\n      onPause: onPauseHandler,\n      onBuffer: onBufferHandler\n    }));\n  }, [userContext]);\n  useEffect(() => {\n    if (videoStatus.data) {\n      const {\n        data\n      } = videoStatus.data.getVideoStatusOnLobby;\n\n      if (data.currTime > 0) {\n        var _playerRef$current2;\n\n        (_playerRef$current2 = playerRef.current) === null || _playerRef$current2 === void 0 ? void 0 : _playerRef$current2.seekTo(data.currTime);\n      }\n\n      setPlayerProps(val => ({ ...val,\n        url: data.url,\n        playing: data.status === 1,\n        played: 0,\n        loaded: 0,\n        pip: false,\n        loop: false\n      }));\n    }\n  }, [videoStatus.data]);\n  useEffect(() => {\n    setPlayerProps(values => ({ ...values,\n      width: \"100%\",\n      height: videoSize.height - 60 // -60 because of padding top and bottom, 30 + 30 = 60\n\n    }));\n  }, [videoSize]); // required whenever creating lobby.\n\n  useEffect(() => {\n    if (userContext.videoUrl) setPlayerProps(val => ({ ...val,\n      url: userContext.videoUrl\n    }));\n  }, [userContext.videoUrl]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: videoContainerStyle,\n    ref: ytContainer,\n    children: /*#__PURE__*/_jsxDEV(ReactPlayer, { ...playerProps,\n      ref: playerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Video, \"c70mR2HVAap5q96s7cdythEW3Ag=\", false, function () {\n  return [useContainerDimension, useSubscription, useMutation, useQuery];\n});\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"names":["useMutation","useQuery","useSubscription","Box","useContext","useEffect","useRef","useState","ReactPlayer","UsrContxt","GET_VIDEO_STATUS","UPDATE_VIDEO","VIDEO_STATUS_SUBSCRIPTION","useContainerDimension","PlayerState","defaultPlayerProps","playing","controls","playbackRate","loop","playsinline","Video","userContext","playerProps","setPlayerProps","updateFromBE","setUpdateFromBE","ytContainer","playerRef","videoSize","updateFromBERef","current","videoChanges","variables","lobbyId","userId","updateVideo","updateVideoProperties","videoStatus","videoContainerStyle","display","bgcolor","width","height","paddingTop","paddingBottom","onPlayHandler","statusInput","currTime","getCurrentTime","toFixed","status","PLAYING","onPauseHandler","param","PAUSED","onBufferHandler","BUFFERING","getPlayerState","eventData","ENDED","VIDEO_CUED","UNSTARTED","data","videoStatusChanged","console","log","url","values","seekTo","onPlay","onPause","onBuffer","getVideoStatusOnLobby","val","played","loaded","pip","videoUrl"],"sources":["/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Video/Video.tsx"],"sourcesContent":["import {\n  MutationTuple,\n  QueryResult,\n  SubscriptionResult,\n  useMutation,\n  useQuery,\n  useSubscription,\n} from \"@apollo/client\";\nimport Box from \"@mui/material/Box\";\nimport { SxProps } from \"@mui/system\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport ReactPlayer, { ReactPlayerProps } from \"react-player\";\nimport { UsrContxt } from \"../../App\";\nimport {\n  GET_VIDEO_STATUS,\n  UPDATE_VIDEO,\n  VIDEO_STATUS_SUBSCRIPTION,\n} from \"../../queries/Video\";\nimport { useContainerDimension } from \"../../util/ResizeUtil\";\nimport UpdateVideoStatusRequest from \"../Chatter/interface/requests/UpdateVideoStatusRequest\";\nimport GenericResponse from \"../Chatter/interface/response/GenericResponse\";\nimport VideoStatusTopicResponse from \"../Chatter/interface/response/VideoStatusTopicResponse\";\n\ninterface LobbyIdProps {\n  lobbyId: string;\n}\ninterface UserIdProps {\n  userIdProps: string;\n}\n\nenum PlayerState {\n  UNSTARTED = -1,\n  ENDED = 0,\n  PLAYING = 1,\n  PAUSED = 2,\n  BUFFERING = 3,\n  VIDEO_CUED = 5,\n}\n\nconst defaultPlayerProps: ReactPlayerProps = {\n  playing: true,\n  controls: true,\n  // muted: true,\n  playbackRate: 1.0,\n  loop: false,\n  playsinline: true,\n};\n\nfunction Video(): JSX.Element {\n  const userContext = useContext(UsrContxt);\n  const [playerProps, setPlayerProps] =\n    useState<ReactPlayerProps>(defaultPlayerProps);\n  const [updateFromBE, setUpdateFromBE] = useState<boolean>(false);\n  const ytContainer = useRef<HTMLDivElement>(null);\n  const playerRef = useRef<ReactPlayer>(null);\n  const videoSize = useContainerDimension(ytContainer);\n\n  // needed to track the correct state on callbacks\n  // SOURCE: https://stackoverflow.com/questions/57847594/react-hooks-accessing-up-to-date-state-from-within-a-callback\n  const updateFromBERef = useRef<boolean>();\n  updateFromBERef.current = updateFromBE;\n\n  const videoChanges: SubscriptionResult<\n    { videoStatusChanged: VideoStatusTopicResponse },\n    { lobbyId: LobbyIdProps; userId: UserIdProps }\n  > = useSubscription(VIDEO_STATUS_SUBSCRIPTION, {\n    variables: {\n      lobbyId: userContext.lobbyId,\n      userId: userContext.userId,\n    },\n  });\n\n  const [updateVideo, updateVideoProperties]: MutationTuple<\n    { updateVideoStatus: GenericResponse },\n    { statusInput: UpdateVideoStatusRequest }\n  > = useMutation(UPDATE_VIDEO);\n\n  const videoStatus: QueryResult<\n    { getVideoStatusOnLobby: VideoStatusTopicResponse },\n    { lobbyId: string }\n  > = useQuery(GET_VIDEO_STATUS, {\n    variables: {\n      lobbyId: userContext.lobbyId,\n    },\n  });\n\n  const videoContainerStyle: SxProps = {\n    display: \"flex\",\n    bgcolor: \"#000\",\n    width: \"inherit\",\n    height: \"calc(100vh - 64px)\", // -64px because of top nav bar\n    \"> div\": {\n      paddingTop: \"30px\",\n      paddingBottom: \"30px\",\n    },\n  };\n\n  const onPlayHandler = (): void => {\n    const { lobbyId, userId } = userContext;\n    if (!playerRef.current) return;\n    // we want to call this if this is a manual play\n    if (!updateFromBERef.current)\n      updateVideo({\n        variables: {\n          statusInput: {\n            currTime: +playerRef.current.getCurrentTime().toFixed(0),\n            lobbyId,\n            userId,\n            status: PlayerState.PLAYING,\n          },\n        },\n      });\n    setUpdateFromBE(false);\n  };\n\n  const onPauseHandler = (param: any): void => {\n    const { lobbyId, userId } = userContext;\n    if (!playerRef.current) return;\n    // we want to call this if this is a manual play\n    if (!updateFromBERef.current)\n      updateVideo({\n        variables: {\n          statusInput: {\n            currTime: +playerRef.current.getCurrentTime().toFixed(0),\n            lobbyId,\n            userId,\n            status: PlayerState.PAUSED,\n          },\n        },\n      });\n    setUpdateFromBE(false);\n  };\n\n  const onBufferHandler = (param: any): void => {\n    const { lobbyId, userId } = userContext;\n    if (!playerRef.current) return;\n    updateVideo({\n      variables: {\n        statusInput: {\n          currTime: +playerRef.current.getCurrentTime().toFixed(0),\n          lobbyId,\n          userId,\n          status: PlayerState.BUFFERING,\n        },\n      },\n    });\n  };\n\n  const getPlayerState = (eventData: number): PlayerState => {\n    switch (eventData) {\n      case 0:\n        return PlayerState.ENDED;\n      case 1:\n        return PlayerState.PLAYING;\n      case 2:\n        return PlayerState.PAUSED;\n      case 3:\n        return PlayerState.BUFFERING;\n      case 5:\n        return PlayerState.VIDEO_CUED;\n      default:\n        return PlayerState.UNSTARTED;\n    }\n  };\n\n  useEffect(() => {\n    if (videoChanges?.data?.videoStatusChanged) {\n      console.log(videoChanges?.data?.videoStatusChanged, \"update from BE\");\n      setUpdateFromBE(true);\n      const { currTime, status, url } =\n        videoChanges.data.videoStatusChanged.data;\n      if (url) {\n        setPlayerProps((values) => ({\n          ...values,\n          url,\n        }));\n      }\n\n      if (\n        currTime > 0 &&\n        playerRef.current &&\n        currTime - +playerRef.current.getCurrentTime().toFixed(0) != 0 // do seek when player difference from BE is not 0\n      ) {\n        playerRef.current?.seekTo(currTime);\n      }\n\n      switch (getPlayerState(status)) {\n        case PlayerState.PLAYING:\n          setPlayerProps((values) => ({\n            ...values,\n            playing: true,\n          }));\n          break;\n        case PlayerState.PAUSED:\n          setPlayerProps((values) => ({\n            ...values,\n            playing: false,\n          }));\n          break;\n        case PlayerState.UNSTARTED:\n        case PlayerState.ENDED:\n        case PlayerState.BUFFERING:\n        default:\n          break;\n      }\n    }\n  }, [videoChanges.data]);\n\n  useEffect(() => {\n    setPlayerProps((values) => ({\n      ...values,\n      onPlay: onPlayHandler,\n      onPause: onPauseHandler,\n      onBuffer: onBufferHandler,\n    }));\n  }, [userContext]);\n\n  useEffect(() => {\n    if (videoStatus.data) {\n      const { data } = videoStatus.data.getVideoStatusOnLobby;\n\n      if (data.currTime > 0) {\n        playerRef.current?.seekTo(data.currTime);\n      }\n\n      setPlayerProps((val) => ({\n        ...val,\n        url: data.url,\n        playing: data.status === 1,\n        played: 0,\n        loaded: 0,\n        pip: false,\n        loop: false,\n      }));\n    }\n  }, [videoStatus.data]);\n\n  useEffect(() => {\n    setPlayerProps((values) => ({\n      ...values,\n      width: \"100%\",\n      height: videoSize.height - 60, // -60 because of padding top and bottom, 30 + 30 = 60\n    }));\n  }, [videoSize]);\n\n  // required whenever creating lobby.\n  useEffect(() => {\n    if (userContext.videoUrl)\n      setPlayerProps((val) => ({\n        ...val,\n        url: userContext.videoUrl,\n      }));\n  }, [userContext.videoUrl]);\n\n  return (\n    <Box sx={videoContainerStyle} ref={ytContainer}>\n      <ReactPlayer {...playerProps} ref={playerRef}></ReactPlayer>\n    </Box>\n  );\n}\n\nexport default Video;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}