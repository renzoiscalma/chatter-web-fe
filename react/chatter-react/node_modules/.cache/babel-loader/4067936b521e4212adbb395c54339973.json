{"ast":null,"code":"var _jsxFileName = \"/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useSearchParams } from \"react-router-dom\";\nimport Layout from \"./components/Layout/Layout\";\nimport LobbyModal from \"./components/Modals/LobbyModal\";\nimport { ADD_NEW_USER, CREATE_LOBBY, IS_LOBBY_EXISTING } from \"./queries/App\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsrContxt = /*#__PURE__*/createContext({\n  username: \"\",\n  userId: \"\",\n  lobbyId: \"\",\n  darkMode: true,\n  setUsername: () => {},\n  darkModeToggle: () => {}\n});\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [lobbyId, setLobbyId] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(true);\n  const [userCookie, setUserCookie] = useCookies([\"user-cookie\"]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [lobbyModal, setLobbyModal] = useState(false); // TODO ADD PROPER TYPES\n\n  const [newUserMutation, newUserMutationRes] = useMutation(ADD_NEW_USER);\n  const [createLobbyMutation, createLobbyMutationRes] = useMutation(CREATE_LOBBY);\n  const [isLobbyExisting, isLobbyExistingRes] = useLazyQuery(IS_LOBBY_EXISTING);\n\n  const createLobby = () => {\n    // todo create loading screen when loading a lobby\n    console.log(\"creating lobby...\"); // TODO add 1 second delay, loading = true modal should have a spinner inside\n\n    createLobbyMutation();\n  };\n\n  const handleSetUsername = username => {\n    setUsername(username);\n  };\n\n  const handleCloseModal = () => {\n    setLobbyModal(false);\n  };\n\n  const handleDarkModeToggle = e => {\n    setDarkMode(val => !val);\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    if (!(userCookie !== null && userCookie !== void 0 && userCookie[\"user-cookie\"])) {\n      newUserMutation();\n    } else {\n      const {\n        userId,\n        username\n      } = userCookie[\"user-cookie\"];\n      setUsername(username);\n      setUserId(userId);\n    }\n\n    const lobbyId = searchParams.get(\"lobbyId\") || \"\";\n\n    if (lobbyId) {\n      isLobbyExisting({\n        variables: {\n          lobbyId: lobbyId\n        }\n      });\n    } else {\n      setLobbyModal(true);\n    }\n  }, []);\n  useEffect(() => {\n    if (newUserMutationRes.data) {\n      let {\n        code,\n        success,\n        user\n      } = newUserMutationRes.data.addNewUser;\n\n      if (code === 200 && success) {\n        setUsername(user.username);\n        setUserId(user.id);\n        setUserCookie(\"user-cookie\", {\n          userId: user.id,\n          username: user.username\n        }, {\n          path: \"/\",\n          expires: new Date(\"11-10-2023\")\n        });\n      }\n    }\n  }, [newUserMutationRes.data]);\n  useEffect(() => {\n    if (createLobbyMutationRes.data) {\n      const {\n        id\n      } = createLobbyMutationRes.data.createLobby;\n      setLobbyId(id);\n      handleCloseModal();\n    }\n  }, [createLobbyMutationRes.data]);\n  useEffect(() => {\n    if (!isLobbyExistingRes.called || isLobbyExistingRes.loading) return;\n    const lobbyId = searchParams.get(\"lobbyId\") || \"\";\n\n    if (isLobbyExistingRes.data && isLobbyExistingRes.data.isLobbyExisting.isExisting) {\n      setLobbyId(lobbyId);\n      handleCloseModal();\n    } else {\n      setLobbyModal(true);\n    }\n  }, [isLobbyExistingRes.data]); // todo proper loading\n\n  if (newUserMutationRes.loading || newUserMutationRes.error) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"LOADING\"\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(UsrContxt.Provider, {\n    value: {\n      username,\n      setUsername: handleSetUsername,\n      userId,\n      lobbyId,\n      darkMode,\n      darkModeToggle: handleDarkModeToggle\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkMode ? darkTheme : lightTheme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(LobbyModal, {\n          opened: lobbyModal,\n          createLobby: createLobby,\n          handleCloseModal: handleCloseModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VBbKrNyYXCNIgLchn+I2aHwuXDY=\", false, function () {\n  return [useCookies, useSearchParams, useMutation, useMutation, useLazyQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useLazyQuery","useMutation","ThemeProvider","createContext","useEffect","useState","useCookies","useSearchParams","Layout","LobbyModal","ADD_NEW_USER","CREATE_LOBBY","IS_LOBBY_EXISTING","darkTheme","lightTheme","UsrContxt","username","userId","lobbyId","darkMode","setUsername","darkModeToggle","App","setUserId","setLobbyId","setDarkMode","userCookie","setUserCookie","searchParams","setSearchParams","lobbyModal","setLobbyModal","newUserMutation","newUserMutationRes","createLobbyMutation","createLobbyMutationRes","isLobbyExisting","isLobbyExistingRes","createLobby","console","log","handleSetUsername","handleCloseModal","handleDarkModeToggle","e","val","preventDefault","get","variables","data","code","success","user","addNewUser","id","path","expires","Date","called","loading","isExisting","error"],"sources":["/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/App.tsx"],"sourcesContent":["import {\n  LazyQueryResultTuple,\n  MutationTuple,\n  useLazyQuery,\n  useMutation,\n} from \"@apollo/client\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useSearchParams } from \"react-router-dom\";\nimport Lobby from \"./components/Chatter/interface/Lobby\";\nimport IsLobbyExistingRequest from \"./components/Chatter/interface/requests/IsLobbyExistingRequest\";\nimport AddNewUserResponse from \"./components/Chatter/interface/response/AddNewUserResponse\";\nimport IsLobbyExistingResponse from \"./components/Chatter/interface/response/IsLobbyExistingResponse\";\nimport UserContext from \"./components/Chatter/interface/UserContext\";\nimport Layout from \"./components/Layout/Layout\";\nimport LobbyModal from \"./components/Modals/LobbyModal\";\nimport { ADD_NEW_USER, CREATE_LOBBY, IS_LOBBY_EXISTING } from \"./queries/App\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nexport const UsrContxt = createContext<UserContext>({\n  username: \"\",\n  userId: \"\",\n  lobbyId: \"\",\n  darkMode: true,\n  setUsername: () => {},\n  darkModeToggle: () => {},\n});\n\nfunction App(): JSX.Element {\n  const [username, setUsername] = useState<string>(\"\");\n  const [userId, setUserId] = useState<string>(\"\");\n  const [lobbyId, setLobbyId] = useState<string>(\"\");\n  const [darkMode, setDarkMode] = useState<boolean>(true);\n  const [userCookie, setUserCookie] = useCookies([\"user-cookie\"]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [lobbyModal, setLobbyModal] = useState<boolean>(false);\n\n  // TODO ADD PROPER TYPES\n  const [newUserMutation, newUserMutationRes]: MutationTuple<\n    { addNewUser: AddNewUserResponse },\n    null\n  > = useMutation(ADD_NEW_USER);\n\n  const [createLobbyMutation, createLobbyMutationRes]: MutationTuple<\n    { createLobby: Lobby },\n    null\n  > = useMutation(CREATE_LOBBY);\n\n  const [isLobbyExisting, isLobbyExistingRes]: LazyQueryResultTuple<\n    { isLobbyExisting: IsLobbyExistingResponse },\n    IsLobbyExistingRequest\n  > = useLazyQuery(IS_LOBBY_EXISTING);\n\n  const createLobby = () => {\n    // todo create loading screen when loading a lobby\n    console.log(\"creating lobby...\");\n    // TODO add 1 second delay, loading = true modal should have a spinner inside\n    createLobbyMutation();\n  };\n\n  const handleSetUsername = (username: string) => {\n    setUsername(username);\n  };\n\n  const handleCloseModal = () => {\n    setLobbyModal(false);\n  };\n\n  const handleDarkModeToggle = (e: MouseEventHandler<HTMLAnchorElement>) => {\n    setDarkMode((val) => !val);\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    if (!userCookie?.[\"user-cookie\"]) {\n      newUserMutation();\n    } else {\n      const { userId, username } = userCookie[\"user-cookie\"];\n      setUsername(username);\n      setUserId(userId);\n    }\n\n    const lobbyId = searchParams.get(\"lobbyId\") || \"\";\n    if (lobbyId) {\n      isLobbyExisting({\n        variables: {\n          lobbyId: lobbyId,\n        },\n      });\n    } else {\n      setLobbyModal(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (newUserMutationRes.data) {\n      let { code, success, user } = newUserMutationRes.data.addNewUser;\n      if (code === 200 && success) {\n        setUsername(user.username);\n        setUserId(user.id);\n        setUserCookie(\n          \"user-cookie\",\n          { userId: user.id, username: user.username },\n          {\n            path: \"/\",\n            expires: new Date(\"11-10-2023\"),\n          }\n        );\n      }\n    }\n  }, [newUserMutationRes.data]);\n\n  useEffect(() => {\n    if (createLobbyMutationRes.data) {\n      const { id } = createLobbyMutationRes.data.createLobby;\n      setLobbyId(id);\n      handleCloseModal();\n    }\n  }, [createLobbyMutationRes.data]);\n\n  useEffect(() => {\n    if (!isLobbyExistingRes.called || isLobbyExistingRes.loading) return;\n    const lobbyId = searchParams.get(\"lobbyId\") || \"\";\n    if (\n      isLobbyExistingRes.data &&\n      isLobbyExistingRes.data.isLobbyExisting.isExisting\n    ) {\n      setLobbyId(lobbyId);\n      handleCloseModal();\n    } else {\n      setLobbyModal(true);\n    }\n  }, [isLobbyExistingRes.data]);\n\n  // todo proper loading\n  if (newUserMutationRes.loading || newUserMutationRes.error)\n    return <>LOADING</>;\n\n  return (\n    <UsrContxt.Provider\n      value={{\n        username,\n        setUsername: handleSetUsername,\n        userId,\n        lobbyId,\n        darkMode,\n        darkModeToggle: handleDarkModeToggle,\n      }}\n    >\n      <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n        <div className=\"App\">\n          <LobbyModal\n            opened={lobbyModal}\n            createLobby={createLobby}\n            handleCloseModal={handleCloseModal}\n          />\n          <Layout />\n        </div>\n      </ThemeProvider>\n    </UsrContxt.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}