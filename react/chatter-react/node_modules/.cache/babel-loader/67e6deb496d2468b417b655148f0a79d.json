{"ast":null,"code":"var _jsxFileName = \"/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Modals/NameChangeModal.tsx\",\n    _s = $RefreshSig$();\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport { useTheme } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NameChangeModal(_ref) {\n  _s();\n\n  var _theme$textInput;\n\n  let {\n    opened,\n    handleCloseModal,\n    handleChangeUsername\n  } = _ref;\n  const theme = useTheme();\n  const style = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    borderRadius: \"26px\",\n    width: 400,\n    bgcolor: theme.appBar.bgColor,\n    boxShadow: 24,\n    p: 4\n  };\n  const confirmButtonSx = {\n    flexGrow: 1\n  };\n  const cancelButtonSx = {\n    flexGrow: 1\n  };\n  const buttonContainer = {\n    display: \"flex\"\n  };\n  const textFieldSx = {\n    margin: \"18px 0\"\n  };\n  const [values, setValues] = useState({\n    newUsername: \"\"\n  });\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\" && values.newUsername !== \"\") {\n      handleChangeUsername(values.newUsername);\n    }\n  };\n\n  const handleChange = prop => event => {\n    setValues({\n      [prop]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: opened,\n    onClose: handleCloseModal,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: style,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"modal-modal-title\",\n        variant: \"h6\",\n        component: \"h2\",\n        textAlign: \"center\",\n        color: theme.common.text.secondary,\n        children: \"Enter New Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        sx: textFieldSx,\n        id: \"outlined-basic\",\n        label: \"Username\",\n        variant: \"outlined\",\n        onChange: handleChange(\"newUsername\"),\n        onKeyDown: handleKeyDown,\n        color: (_theme$textInput = theme.textInput) === null || _theme$textInput === void 0 ? void 0 : _theme$textInput.textColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: buttonContainer,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          sx: confirmButtonSx,\n          onClick: () => {\n            handleChangeUsername(values.newUsername);\n          },\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: cancelButtonSx,\n          onClick: () => {\n            handleChangeUsername(values.newUsername);\n          },\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NameChangeModal, \"fUMec4bWxI5AxctJRG1twatYjhM=\", false, function () {\n  return [useTheme];\n});\n\n_c = NameChangeModal;\nexport default NameChangeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameChangeModal\");","map":{"version":3,"names":["Box","Button","Modal","useTheme","TextField","Typography","useState","NameChangeModal","opened","handleCloseModal","handleChangeUsername","theme","style","display","flexDirection","position","top","left","transform","borderRadius","width","bgcolor","appBar","bgColor","boxShadow","p","confirmButtonSx","flexGrow","cancelButtonSx","buttonContainer","textFieldSx","margin","values","setValues","newUsername","handleKeyDown","event","key","handleChange","prop","target","value","common","text","secondary","textInput","textColor"],"sources":["/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Modals/NameChangeModal.tsx"],"sourcesContent":["import Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport { SxProps, useTheme } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { KeyboardEvent, useState } from \"react\";\n\ninterface NameChangeModalProps {\n  opened: boolean;\n  handleCloseModal(): void;\n  handleChangeUsername(newUsername: string): void;\n}\n\ninterface State {\n  newUsername: string;\n}\n\nfunction NameChangeModal({\n  opened,\n  handleCloseModal,\n  handleChangeUsername,\n}: NameChangeModalProps): JSX.Element {\n  const theme = useTheme();\n\n  const style: SxProps = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\" as \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    borderRadius: \"26px\",\n    width: 400,\n    bgcolor: theme.appBar.bgColor,\n    boxShadow: 24,\n    p: 4,\n  };\n\n  const confirmButtonSx: SxProps = {\n    flexGrow: 1,\n  };\n\n  const cancelButtonSx: SxProps = {\n    flexGrow: 1,\n  };\n\n  const buttonContainer: SxProps = {\n    display: \"flex\",\n  };\n\n  const textFieldSx: SxProps = {\n    margin: \"18px 0\",\n  };\n\n  const [values, setValues] = useState<State>({\n    newUsername: \"\",\n  });\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === \"Enter\" && values.newUsername !== \"\") {\n      handleChangeUsername(values.newUsername);\n    }\n  };\n\n  const handleChange =\n    (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValues({ [prop]: event.target.value });\n    };\n\n  return (\n    <Modal open={opened} onClose={handleCloseModal}>\n      <Box sx={style}>\n        <Typography\n          id=\"modal-modal-title\"\n          variant=\"h6\"\n          component=\"h2\"\n          textAlign=\"center\"\n          color={theme.common.text.secondary}\n        >\n          Enter New Username\n        </Typography>\n        <TextField\n          sx={textFieldSx}\n          id=\"outlined-basic\"\n          label=\"Username\"\n          variant=\"outlined\"\n          onChange={handleChange(\"newUsername\")}\n          onKeyDown={handleKeyDown}\n          color={theme.textInput?.textColor}\n        />\n        <Box sx={buttonContainer}>\n          <Button\n            sx={confirmButtonSx}\n            onClick={() => {\n              handleChangeUsername(values.newUsername);\n            }}\n          >\n            SUBMIT\n          </Button>\n          <Button\n            sx={cancelButtonSx}\n            onClick={() => {\n              handleChangeUsername(values.newUsername);\n            }}\n          >\n            CANCEL\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default NameChangeModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}