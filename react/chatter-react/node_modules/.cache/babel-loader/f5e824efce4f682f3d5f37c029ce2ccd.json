{"ast":null,"code":"var _jsxFileName = \"/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport Layout from \"./components/Layout/Layout\";\nimport { ADD_NEW_USER, CREATE_LOBBY, IS_LOBBY_EXISTING } from \"./components/Queries/App\";\nimport LobbyModal from \"./components/Lobby/LobbyModal\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsrContxt = /*#__PURE__*/createContext({\n  username: \"\",\n  userId: \"\",\n  lobbyId: \"\",\n  setUsername: username => {}\n});\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [lobbyId, setLobbyId] = useState(\"633c71d566f605851babba3e\");\n  const [userCookie, setUserCookie] = useCookies([\"user-cookie\"]); // TODO ADD PROPER TYPES\n\n  const [newUserMutation, newUserMutationRes] = useMutation(ADD_NEW_USER);\n  const [createLobbyMutation, createLobbyMutationRes] = useMutation(CREATE_LOBBY);\n  const [isLobbyExisting, isLobbyExistingRes] = useLazyQuery(IS_LOBBY_EXISTING);\n\n  const createLobby = () => {\n    // todo create loading screen when loading a lobby\n    console.log(\"creating lobby...\");\n    createLobbyMutation();\n  };\n\n  const handleSetUsername = username => {\n    setUsername(username);\n  };\n\n  useEffect(() => {\n    if (!(userCookie !== null && userCookie !== void 0 && userCookie[\"user-cookie\"])) {\n      newUserMutation();\n    } else {\n      const {\n        userId,\n        username\n      } = userCookie[\"user-cookie\"];\n      setUsername(username);\n      setUserId(userId);\n    }\n  }, []);\n  useEffect(() => {\n    if (newUserMutationRes.data) {\n      let {\n        code,\n        success,\n        user\n      } = newUserMutationRes.data.addNewUser;\n\n      if (code === 200 && success) {\n        setUsername(user.username);\n        setUserId(user.id);\n        setUserCookie(\"user-cookie\", {\n          userId: user.id,\n          username: user.username\n        }, {\n          path: \"/\",\n          expires: new Date(\"11-10-2023\")\n        });\n      }\n    }\n  }, [newUserMutationRes.data]);\n  useEffect(() => {\n    if (createLobbyMutationRes.data) {\n      let {\n        id\n      } = createLobbyMutation.data;\n    }\n  }, [createLobbyMutationRes.data]); // todo proper loading\n\n  if (newUserMutationRes.loading || newUserMutationRes.error) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"LOADING\"\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(UsrContxt.Provider, {\n    value: {\n      username,\n      setUsername: handleSetUsername,\n      userId,\n      lobbyId\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(LobbyModal, {\n        opened: true,\n        createLobby: createLobby\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jThrUL57cUggzmrD7qDIUJLHE+0=\", false, function () {\n  return [useCookies, useMutation, useMutation, useLazyQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useLazyQuery","useMutation","React","createContext","useEffect","useState","useCookies","Layout","ADD_NEW_USER","CREATE_LOBBY","IS_LOBBY_EXISTING","LobbyModal","UsrContxt","username","userId","lobbyId","setUsername","App","setUserId","setLobbyId","userCookie","setUserCookie","newUserMutation","newUserMutationRes","createLobbyMutation","createLobbyMutationRes","isLobbyExisting","isLobbyExistingRes","createLobby","console","log","handleSetUsername","data","code","success","user","addNewUser","id","path","expires","Date","loading","error"],"sources":["/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/App.tsx"],"sourcesContent":["import {\n  LazyQueryResultTuple,\n  MutationTuple,\n  useLazyQuery,\n  useMutation,\n} from \"@apollo/client\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport UserContext from \"./components/Chatter/interface/UserContext\";\nimport Layout from \"./components/Layout/Layout\";\nimport {\n  ADD_NEW_USER,\n  CREATE_LOBBY,\n  IS_LOBBY_EXISTING,\n} from \"./components/Queries/App\";\nimport LobbyModal from \"./components/Lobby/LobbyModal\";\nimport IsLobbyExistingRequest from \"./components/Chatter/interface/requests/IsLobbyExistingRequest\";\nimport IsLobbyExistingResponse from \"./components/Chatter/interface/response/IsLobbyExistingResponse\";\nimport Lobby from \"./components/Chatter/interface/Lobby\";\n\nexport const UsrContxt = createContext<UserContext>({\n  username: \"\",\n  userId: \"\",\n  lobbyId: \"\",\n  setUsername: (username: string) => {},\n});\n\nfunction App(): JSX.Element {\n  const [username, setUsername] = useState<string>(\"\");\n  const [userId, setUserId] = useState<string>(\"\");\n  const [lobbyId, setLobbyId] = useState<string>(\"633c71d566f605851babba3e\");\n  const [userCookie, setUserCookie] = useCookies([\"user-cookie\"]);\n\n  // TODO ADD PROPER TYPES\n  const [newUserMutation, newUserMutationRes]: MutationTuple<any, any> =\n    useMutation(ADD_NEW_USER);\n\n  const [createLobbyMutation, createLobbyMutationRes]: MutationTuple<\n    { lobby: Lobby },\n    null\n  > = useMutation(CREATE_LOBBY);\n\n  const [isLobbyExisting, isLobbyExistingRes]: LazyQueryResultTuple<\n    IsLobbyExistingResponse,\n    IsLobbyExistingRequest\n  > = useLazyQuery(IS_LOBBY_EXISTING);\n\n  const createLobby = () => {\n    // todo create loading screen when loading a lobby\n    console.log(\"creating lobby...\");\n    createLobbyMutation();\n  };\n\n  const handleSetUsername = (username: string) => {\n    setUsername(username);\n  };\n\n  useEffect(() => {\n    if (!userCookie?.[\"user-cookie\"]) {\n      newUserMutation();\n    } else {\n      const { userId, username } = userCookie[\"user-cookie\"];\n      setUsername(username);\n      setUserId(userId);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (newUserMutationRes.data) {\n      let { code, success, user } = newUserMutationRes.data.addNewUser;\n      if (code === 200 && success) {\n        setUsername(user.username);\n        setUserId(user.id);\n        setUserCookie(\n          \"user-cookie\",\n          { userId: user.id, username: user.username },\n          {\n            path: \"/\",\n            expires: new Date(\"11-10-2023\"),\n          }\n        );\n      }\n    }\n  }, [newUserMutationRes.data]);\n\n  useEffect(() => {\n    if (createLobbyMutationRes.data) {\n      let { id } = createLobbyMutation.data;\n    }\n  }, [createLobbyMutationRes.data]);\n\n  // todo proper loading\n  if (newUserMutationRes.loading || newUserMutationRes.error)\n    return <>LOADING</>;\n\n  return (\n    <UsrContxt.Provider\n      value={{ username, setUsername: handleSetUsername, userId, lobbyId }}\n    >\n      <div className=\"App\">\n        <LobbyModal opened={true} createLobby={createLobby} />\n        <Layout />\n      </div>\n    </UsrContxt.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}