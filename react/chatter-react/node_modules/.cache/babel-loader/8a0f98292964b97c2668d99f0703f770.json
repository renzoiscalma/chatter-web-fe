{"ast":null,"code":"var _jsxFileName = \"/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Modals/ChangeUsernameModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMutation } from \"@apollo/client\";\nimport { Button } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { Box } from \"@mui/system\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { UsrContxt } from \"../../App\";\nimport { CHANGE_USERNAME, VALIDATE_USERNAME } from \"../../queries/MessageBar\";\nimport OutlinedField from \"../InputField/OutlinedField\";\nimport ModalBase from \"./ModalBase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangeUsernameModal = _ref => {\n  _s();\n\n  let {\n    opened,\n    onClose\n  } = _ref;\n  const theme = useTheme();\n  const userContext = useContext(UsrContxt);\n  const [error, setError] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [changeUsernameMutation, changeUsernameMutationProps] = useMutation(CHANGE_USERNAME);\n  const [usernameValidationMutataion, usernameValidationMutationProps] = useMutation(VALIDATE_USERNAME);\n  const confirmButtonSx = {\n    flexGrow: 1,\n    color: theme.common.text.accept,\n    fontWeight: \"bold\"\n  };\n  const cancelButtonSx = {\n    flexGrow: 1,\n    color: theme.common.text.decline,\n    fontWeight: \"bold\"\n  };\n  const buttonContainer = {\n    display: \"flex\"\n  };\n\n  const submitHandler = () => {\n    usernameValidationMutataion({\n      variables: {\n        username: username\n      }\n    });\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\" && username !== \"\") {\n      submitHandler();\n    }\n  };\n\n  const handleChange = event => {\n    setUsername(event.target.value);\n    setError(false);\n  };\n\n  useEffect(() => {\n    if (usernameValidationMutationProps.called && usernameValidationMutationProps.data) {\n      var _usernameValidationMu, _usernameValidationMu2;\n\n      if ((_usernameValidationMu = usernameValidationMutationProps.data) !== null && _usernameValidationMu !== void 0 && (_usernameValidationMu2 = _usernameValidationMu.validateUsername) !== null && _usernameValidationMu2 !== void 0 && _usernameValidationMu2.valid) {\n        changeUsernameMutation({\n          variables: {\n            userId: userContext.userId,\n            newUsername: username\n          }\n        });\n      } else {\n        setError(true);\n      }\n    }\n  }, [usernameValidationMutationProps]);\n  useEffect(() => {\n    var _changeUsernameMutati;\n\n    if (changeUsernameMutationProps.called && (_changeUsernameMutati = changeUsernameMutationProps.data) !== null && _changeUsernameMutati !== void 0 && _changeUsernameMutati.changeUsername.success) {\n      userContext.setUsername(username);\n    }\n  }, [changeUsernameMutationProps]);\n  return /*#__PURE__*/_jsxDEV(ModalBase, {\n    open: opened,\n    onClose: onClose,\n    header: \"Input New Username\",\n    children: [/*#__PURE__*/_jsxDEV(OutlinedField, {\n      placeholder: \"Username\",\n      defaultValue: userContext.username,\n      onChange: handleChange,\n      onKeyDown: handleKeyDown,\n      autoComplete: \"off\",\n      error: error,\n      helperText: error ? \"Incorrect entry\" : \"\",\n      label: \"Username\",\n      disabled: usernameValidationMutationProps.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        sx: confirmButtonSx,\n        onClick: submitHandler,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: cancelButtonSx,\n        onClick: onClose,\n        children: \"CANCEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangeUsernameModal, \"TRmODsE2TCU7RmSjzK6AXzSNrps=\", false, function () {\n  return [useTheme, useMutation, useMutation];\n});\n\n_c = ChangeUsernameModal;\nexport default ChangeUsernameModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeUsernameModal\");","map":{"version":3,"names":["useMutation","Button","useTheme","Box","useContext","useEffect","useState","UsrContxt","CHANGE_USERNAME","VALIDATE_USERNAME","OutlinedField","ModalBase","ChangeUsernameModal","opened","onClose","theme","userContext","error","setError","username","setUsername","changeUsernameMutation","changeUsernameMutationProps","usernameValidationMutataion","usernameValidationMutationProps","confirmButtonSx","flexGrow","color","common","text","accept","fontWeight","cancelButtonSx","decline","buttonContainer","display","submitHandler","variables","handleKeyDown","event","key","handleChange","target","value","called","data","validateUsername","valid","userId","newUsername","changeUsername","success","loading"],"sources":["/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Modals/ChangeUsernameModal.tsx"],"sourcesContent":["import { MutationTuple, useMutation } from \"@apollo/client\";\nimport { Button } from \"@mui/material\";\nimport { SxProps, useTheme } from \"@mui/material/styles\";\nimport { Box } from \"@mui/system\";\nimport { KeyboardEvent, useContext, useEffect, useState } from \"react\";\nimport { UsrContxt } from \"../../App\";\nimport { CHANGE_USERNAME, VALIDATE_USERNAME } from \"../../queries/MessageBar\";\nimport ChangeUsernameRequest from \"../Chatter/interface/requests/ChangeUsernameRequest\";\nimport GenericResponse from \"../Chatter/interface/response/GenericResponse\";\nimport OutlinedField from \"../InputField/OutlinedField\";\nimport ModalBase from \"./ModalBase\";\ninterface ChangeUsernameModalProps {\n  opened: boolean;\n  onClose(): void;\n}\n\nconst ChangeUsernameModal = ({\n  opened,\n  onClose,\n}: ChangeUsernameModalProps): JSX.Element => {\n  const theme = useTheme();\n  const userContext = useContext(UsrContxt);\n  const [error, setError] = useState<boolean>(false);\n  const [username, setUsername] = useState<string>(\"\");\n\n  const [changeUsernameMutation, changeUsernameMutationProps]: MutationTuple<\n    { changeUsername: GenericResponse },\n    ChangeUsernameRequest\n  > = useMutation(CHANGE_USERNAME);\n\n  const [\n    usernameValidationMutataion,\n    usernameValidationMutationProps,\n  ]: MutationTuple<\n    { validateUsername: GenericResponse & { valid: boolean } },\n    {\n      username: string;\n    }\n  > = useMutation(VALIDATE_USERNAME);\n\n  const confirmButtonSx: SxProps = {\n    flexGrow: 1,\n    color: theme.common.text.accept,\n    fontWeight: \"bold\",\n  };\n\n  const cancelButtonSx: SxProps = {\n    flexGrow: 1,\n    color: theme.common.text.decline,\n    fontWeight: \"bold\",\n  };\n\n  const buttonContainer: SxProps = {\n    display: \"flex\",\n  };\n\n  const submitHandler = (): void => {\n    usernameValidationMutataion({\n      variables: {\n        username: username,\n      },\n    });\n  };\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === \"Enter\" && username !== \"\") {\n      submitHandler();\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUsername(event.target.value);\n    setError(false);\n  };\n\n  useEffect(() => {\n    if (\n      usernameValidationMutationProps.called &&\n      usernameValidationMutationProps.data\n    ) {\n      if (usernameValidationMutationProps.data?.validateUsername?.valid) {\n        changeUsernameMutation({\n          variables: {\n            userId: userContext.userId,\n            newUsername: username,\n          },\n        });\n      } else {\n        setError(true);\n      }\n    }\n  }, [usernameValidationMutationProps]);\n\n  useEffect(() => {\n    if (\n      changeUsernameMutationProps.called &&\n      changeUsernameMutationProps.data?.changeUsername.success\n    ) {\n      userContext.setUsername(username);\n    }\n  }, [changeUsernameMutationProps]);\n\n  return (\n    <ModalBase open={opened} onClose={onClose} header=\"Input New Username\">\n      <OutlinedField\n        placeholder={\"Username\"}\n        defaultValue={userContext.username}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        autoComplete=\"off\"\n        error={error}\n        helperText={error ? \"Incorrect entry\" : \"\"}\n        label=\"Username\"\n        disabled={usernameValidationMutationProps.loading}\n      />\n      <Box sx={buttonContainer}>\n        <Button sx={confirmButtonSx} onClick={submitHandler}>\n          SUBMIT\n        </Button>\n        <Button sx={cancelButtonSx} onClick={onClose}>\n          CANCEL\n        </Button>\n      </Box>\n    </ModalBase>\n  );\n};\n\nexport default ChangeUsernameModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}