{"ast":null,"code":"var _jsxFileName = \"/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Modals/SimpleModal.tsx\",\n    _s = $RefreshSig$();\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport OutlinedField from \"../InputField/OutlinedField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n *  A generic modal that contains a SINGLE text input, a confirm and a cancel button.\n **/\nfunction SimpleModal(_ref) {\n  _s();\n\n  var _theme$modal;\n\n  let {\n    opened,\n    handleCloseModal,\n    handleSubmit,\n    header,\n    placeholder,\n    initialValue,\n    validation\n  } = _ref;\n  const theme = useTheme();\n  const style = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    borderRadius: \"26px\",\n    width: 400,\n    bgcolor: (_theme$modal = theme.modal) === null || _theme$modal === void 0 ? void 0 : _theme$modal.bgColor,\n    boxShadow: 24,\n    px: 4,\n    py: 2\n  };\n  const confirmButtonSx = {\n    flexGrow: 1,\n    color: theme.common.text.accept,\n    fontWeight: \"bold\"\n  };\n  const cancelButtonSx = {\n    flexGrow: 1,\n    color: theme.common.text.decline,\n    fontWeight: \"bold\"\n  };\n  const buttonContainer = {\n    display: \"flex\"\n  };\n  const [values, setValues] = useState({\n    input: \"\",\n    error: false\n  });\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\" && values.input !== \"\") {\n      handleSubmit(values.input);\n    }\n  };\n\n  const handleChange = prop => event => {\n    setValues(values => ({ ...values,\n      [prop]: event.target.value,\n      error: false\n    }));\n  };\n\n  const submitHandler = () => {\n    if (validation) {\n      if (validation(values.input)) {\n        handleSubmit(values.input);\n      } else {\n        setValues(values => ({ ...values,\n          error: true\n        }));\n      }\n    } else {\n      handleSubmit(values.input);\n    }\n  };\n\n  const onCloseHandler = () => {\n    setValues({\n      error: false,\n      input: \"\"\n    });\n    handleCloseModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: opened,\n    onClose: onCloseHandler,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: style,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"modal-modal-title\",\n        variant: \"h6\",\n        component: \"h2\",\n        textAlign: \"center\",\n        color: theme.common.text.secondary,\n        children: header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedField, {\n        error: values.error,\n        helperText: values.error ? \"Incorrect entry.\" : \"\",\n        autoComplete: \"off\",\n        id: \"outlined-basic\",\n        label: placeholder,\n        onChange: handleChange(\"input\"),\n        onKeyDown: handleKeyDown,\n        defaultValue: initialValue,\n        placeholder: \"https://www.youtube.com/watch?v=4WXs3sKu41I\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: buttonContainer,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          sx: confirmButtonSx,\n          onClick: submitHandler,\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: cancelButtonSx,\n          onClick: onCloseHandler,\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleModal, \"64/86sPPWiG8WZu2SQIHA116D3I=\", false, function () {\n  return [useTheme];\n});\n\n_c = SimpleModal;\nexport default SimpleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleModal\");","map":{"version":3,"names":["Box","Button","Modal","useTheme","Typography","useState","OutlinedField","SimpleModal","opened","handleCloseModal","handleSubmit","header","placeholder","initialValue","validation","theme","style","display","flexDirection","position","top","left","transform","borderRadius","width","bgcolor","modal","bgColor","boxShadow","px","py","confirmButtonSx","flexGrow","color","common","text","accept","fontWeight","cancelButtonSx","decline","buttonContainer","values","setValues","input","error","handleKeyDown","event","key","handleChange","prop","target","value","submitHandler","onCloseHandler","secondary"],"sources":["/home/xeg/dev/chatter-web/frontend/react/chatter-react/src/components/Modals/SimpleModal.tsx"],"sourcesContent":["import Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@mui/material/Modal\";\nimport { SxProps, useTheme } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport { KeyboardEvent, useState } from \"react\";\nimport OutlinedField from \"../InputField/OutlinedField\";\n\ninterface ModalProps {\n  opened: boolean;\n  handleCloseModal(): void;\n  handleSubmit(input: string): void;\n  header: string;\n  placeholder: string;\n  initialValue?: string;\n  validation?(input: string): boolean;\n  overrideError?: boolean;\n  errorProp?: boolean;\n}\n\ninterface InputState {\n  input: string;\n  error: boolean;\n}\n\n/**\n *  A generic modal that contains a SINGLE text input, a confirm and a cancel button.\n **/\nfunction SimpleModal({\n  opened,\n  handleCloseModal,\n  handleSubmit,\n  header,\n  placeholder,\n  initialValue,\n  validation,\n}: ModalProps): JSX.Element {\n  const theme = useTheme();\n\n  const style: SxProps = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\" as \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    borderRadius: \"26px\",\n    width: 400,\n    bgcolor: theme.modal?.bgColor,\n    boxShadow: 24,\n    px: 4,\n    py: 2,\n  };\n\n  const confirmButtonSx: SxProps = {\n    flexGrow: 1,\n    color: theme.common.text.accept,\n    fontWeight: \"bold\",\n  };\n\n  const cancelButtonSx: SxProps = {\n    flexGrow: 1,\n    color: theme.common.text.decline,\n    fontWeight: \"bold\",\n  };\n\n  const buttonContainer: SxProps = {\n    display: \"flex\",\n  };\n\n  const [values, setValues] = useState<InputState>({\n    input: \"\",\n    error: false,\n  });\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === \"Enter\" && values.input !== \"\") {\n      handleSubmit(values.input);\n    }\n  };\n\n  const handleChange =\n    (prop: keyof InputState) =>\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValues((values) => ({\n        ...values,\n        [prop]: event.target.value,\n        error: false,\n      }));\n    };\n\n  const submitHandler = (): void => {\n    if (validation) {\n      if (validation(values.input)) {\n        handleSubmit(values.input);\n      } else {\n        setValues((values) => ({ ...values, error: true }));\n      }\n    } else {\n      handleSubmit(values.input);\n    }\n  };\n\n  const onCloseHandler = (): void => {\n    setValues({\n      error: false,\n      input: \"\",\n    });\n    handleCloseModal();\n  };\n\n  return (\n    <Modal open={opened} onClose={onCloseHandler}>\n      <Box sx={style}>\n        <Typography\n          id=\"modal-modal-title\"\n          variant=\"h6\"\n          component=\"h2\"\n          textAlign=\"center\"\n          color={theme.common.text.secondary}\n        >\n          {header}\n        </Typography>\n        <OutlinedField\n          error={values.error}\n          helperText={values.error ? \"Incorrect entry.\" : \"\"}\n          autoComplete=\"off\"\n          id=\"outlined-basic\"\n          label={placeholder}\n          onChange={handleChange(\"input\")}\n          onKeyDown={handleKeyDown}\n          defaultValue={initialValue}\n          placeholder=\"https://www.youtube.com/watch?v=4WXs3sKu41I\"\n        />\n        <Box sx={buttonContainer}>\n          <Button sx={confirmButtonSx} onClick={submitHandler}>\n            SUBMIT\n          </Button>\n          <Button sx={cancelButtonSx} onClick={onCloseHandler}>\n            CANCEL\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default SimpleModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}