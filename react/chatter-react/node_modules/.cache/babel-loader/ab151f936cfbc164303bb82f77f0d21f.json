{"ast":null,"code":"/** @private */\nexport function extendedTypeof(val) {\n  if (val === null) {\n    return 'null';\n  }\n\n  if (Array.isArray(val)) {\n    return 'array';\n  }\n\n  return typeof val;\n}\n/** @private */\n\nexport function isObject(val) {\n  return extendedTypeof(val) === 'object';\n}\n/** @private */\n\nexport function isAsyncIterable(val) {\n  return typeof Object(val)[Symbol.asyncIterator] === 'function';\n}\n/** @private */\n\nexport function isAsyncGenerator(val) {\n  return isObject(val) && typeof Object(val)[Symbol.asyncIterator] === 'function' && typeof val.return === 'function' // for lazy ones, we only need the return anyway\n  // typeof val.throw === 'function' &&\n  // typeof val.next === 'function'\n  ;\n}\n/** @private */\n\nexport function areGraphQLErrors(obj) {\n  return Array.isArray(obj) && // must be at least one error\n  obj.length > 0 && // error has at least a message\n  obj.every(ob => 'message' in ob);\n}\n/**\n * Limits the WebSocket close event reason to not exceed a length of one frame.\n * Reference: https://datatracker.ietf.org/doc/html/rfc6455#section-5.2.\n *\n * @private\n */\n\nexport function limitCloseReason(reason, whenTooLong) {\n  return reason.length < 124 ? reason : whenTooLong;\n}","map":{"version":3,"names":["extendedTypeof","val","Array","isArray","isObject","isAsyncIterable","Object","Symbol","asyncIterator","isAsyncGenerator","return","areGraphQLErrors","obj","length","every","ob","limitCloseReason","reason","whenTooLong"],"sources":["/home/xeg/dev/chatter-web/frontend/react/chatter-react/node_modules/graphql-ws/lib/utils.mjs"],"sourcesContent":["/** @private */\nexport function extendedTypeof(val) {\n    if (val === null) {\n        return 'null';\n    }\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n    return typeof val;\n}\n/** @private */\nexport function isObject(val) {\n    return extendedTypeof(val) === 'object';\n}\n/** @private */\nexport function isAsyncIterable(val) {\n    return typeof Object(val)[Symbol.asyncIterator] === 'function';\n}\n/** @private */\nexport function isAsyncGenerator(val) {\n    return (isObject(val) &&\n        typeof Object(val)[Symbol.asyncIterator] === 'function' &&\n        typeof val.return === 'function'\n    // for lazy ones, we only need the return anyway\n    // typeof val.throw === 'function' &&\n    // typeof val.next === 'function'\n    );\n}\n/** @private */\nexport function areGraphQLErrors(obj) {\n    return (Array.isArray(obj) &&\n        // must be at least one error\n        obj.length > 0 &&\n        // error has at least a message\n        obj.every((ob) => 'message' in ob));\n}\n/**\n * Limits the WebSocket close event reason to not exceed a length of one frame.\n * Reference: https://datatracker.ietf.org/doc/html/rfc6455#section-5.2.\n *\n * @private\n */\nexport function limitCloseReason(reason, whenTooLong) {\n    return reason.length < 124 ? reason : whenTooLong;\n}\n"],"mappings":"AAAA;AACA,OAAO,SAASA,cAAT,CAAwBC,GAAxB,EAA6B;EAChC,IAAIA,GAAG,KAAK,IAAZ,EAAkB;IACd,OAAO,MAAP;EACH;;EACD,IAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;IACpB,OAAO,OAAP;EACH;;EACD,OAAO,OAAOA,GAAd;AACH;AACD;;AACA,OAAO,SAASG,QAAT,CAAkBH,GAAlB,EAAuB;EAC1B,OAAOD,cAAc,CAACC,GAAD,CAAd,KAAwB,QAA/B;AACH;AACD;;AACA,OAAO,SAASI,eAAT,CAAyBJ,GAAzB,EAA8B;EACjC,OAAO,OAAOK,MAAM,CAACL,GAAD,CAAN,CAAYM,MAAM,CAACC,aAAnB,CAAP,KAA6C,UAApD;AACH;AACD;;AACA,OAAO,SAASC,gBAAT,CAA0BR,GAA1B,EAA+B;EAClC,OAAQG,QAAQ,CAACH,GAAD,CAAR,IACJ,OAAOK,MAAM,CAACL,GAAD,CAAN,CAAYM,MAAM,CAACC,aAAnB,CAAP,KAA6C,UADzC,IAEJ,OAAOP,GAAG,CAACS,MAAX,KAAsB,UAF1B,CAGA;EACA;EACA;EALA;AAOH;AACD;;AACA,OAAO,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;EAClC,OAAQV,KAAK,CAACC,OAAN,CAAcS,GAAd,KACJ;EACAA,GAAG,CAACC,MAAJ,GAAa,CAFT,IAGJ;EACAD,GAAG,CAACE,KAAJ,CAAWC,EAAD,IAAQ,aAAaA,EAA/B,CAJJ;AAKH;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,WAAlC,EAA+C;EAClD,OAAOD,MAAM,CAACJ,MAAP,GAAgB,GAAhB,GAAsBI,MAAtB,GAA+BC,WAAtC;AACH"},"metadata":{},"sourceType":"module"}